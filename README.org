#+TITLE: tspew
#+OPTIONS: TOC:nil

[[https://jcs-emacs.github.io/jcs-elpa/#/tspew][https://raw.githubusercontent.com/jcs-emacs/badges/master/elpa/v/tspew.svg]]

* An Emacs minor mode for template-related errors in C++
~tspew~ addresses the "template spew" problem for C++ coders.
This minor mode runs during compilation of C++ code and reformats long error messages to be easier to read.
It indents template type names according to their hierarchy, adding newlines as required
to eliminate run-on lines.

* Usage
** Installation
*** package.el
This package is available from [[https://jcs-emacs.github.io/jcs-elpa/][JCS-ELPA]]. Install from these repositories then you should be good to go!

Normally, you don't need to add ~(require 'tspew)~ to your configuration since most ~tspew~ commands are autoload and can be called without loading the module!
*** Install tspew.el somewhere in your ~load-path~
*** In your init file:
- ~(require 'tspew)~ or otherwise specify it should be loaded (e.g. with ~use-package~)
- Ensure it runs during compilation with ~(add-hook 'compilation-mode-hook 'tspew-mode)~
** Displaying formatted types and functions within error messages
- Formatting occurs as compilation results arrive and are complete when the compile finishes
- To remove all formatting, exit the minor mode with ~M-x tspew-mode~
** Reducing detail in types
- The command ~tspew-fold~, when run with a numeric argument, will replace text around point that is at or below that depth in parentheses (or brackets) with ellipses =...= A ~nil~ argument will restore everything.
- Currently, this command removes formatting as a side effect.

* Example

#+CAPTION: Before
[[./before.png]]

Becomes:

#+CAPTION: After
[[./after.png]]
